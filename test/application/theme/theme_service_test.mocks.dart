// Mocks generated by Mockito 5.0.15 from annotations
// in advicer/test/application/theme/theme_service_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:advicer/core/failures/failures.dart' as _i6;
import 'package:advicer/domain/repositories/theme/theme_repository.dart' as _i2;
import 'package:advicer/domain/usecases/theme_usecases.dart' as _i4;
import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeThemeRepository_0 extends _i1.Fake implements _i2.ThemeRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [ThemeUsecases].
///
/// See the documentation for Mockito's code generation for more information.
class MockThemeUsecases extends _i1.Mock implements _i4.ThemeUsecases {
  MockThemeUsecases() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ThemeRepository get themeRepository =>
      (super.noSuchMethod(Invocation.getter(#themeRepository),
          returnValue: _FakeThemeRepository_0()) as _i2.ThemeRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, bool>> getThemeMode() =>
      (super.noSuchMethod(Invocation.method(#getThemeMode, []),
              returnValue: Future<_i3.Either<_i6.Failure, bool>>.value(
                  _FakeEither_1<_i6.Failure, bool>()))
          as _i5.Future<_i3.Either<_i6.Failure, bool>>);
  @override
  _i5.Future<void> setThemeMode({bool? mode}) =>
      (super.noSuchMethod(Invocation.method(#setThemeMode, [], {#mode: mode}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  String toString() => super.toString();
}
